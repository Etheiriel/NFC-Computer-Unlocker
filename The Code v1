//This is for C++
#include <Wire.h>
#include <Adafruit_PN532.h>
#include <TimeLib.h>
#include <Keyboard.h>
#include <DS1307RTC.h>
#include <string.h>

#define IRQ 6 // this trace must be cut and rewired!
#define RESET 8
int crntpctr = 0;
Adafruit_PN532 nfc(IRQ, RESET);

//////////////////////////////////// SETUP

void setup() {
  // set up Serial library at 9600 bps
  Serial.begin(9600);

  // find Adafruit RFID/NFC shield
  nfc.begin();

  uint32_t versiondata = nfc.getFirmwareVersion();
  if (! versiondata) {
    Serial.print("Didn't find PN53x board");
    while (1); // halt
  }
  // Got ok data, print it out!
  Serial.print("Found chip PN5"); Serial.println((versiondata >> 24) & 0xFF, HEX);
  Serial.print("Firmware ver. "); Serial.print((versiondata >> 16) & 0xFF, DEC);
  Serial.print('.'); Serial.println((versiondata >> 8) & 0xFF, DEC);

  // configure board to read RFID tags
  nfc.SAMConfig();
  Keyboard.begin(); //initiate the Keyboard
  pinMode(12, OUTPUT);
  pinMode(13, OUTPUT);
  while (!Serial);
  setSyncProvider(RTC.get);

}

/////////////////////////////////// LOOP

unsigned digit = 0;
void loop()
{


  uint8_t success;
  uint8_t uid[] = { 0, 0, 0, 0, 0, 0, 0 }; // Buffer to store the returned UID
  uint8_t uidLength; // Length of the UID (4 or 7 bytes depending on ISO14443A card type)

  // wait for RFID card to show up!
  Serial.println("Waiting for an ISO14443A Card ...");


  // Wait for an ISO14443A type cards (Mifare, etc.). When one is found
  // 'uid' will be populated with the UID, and uidLength will indicate
  // if the uid is 4 bytes (Mifare Classic) or 7 bytes (Mifare Ultralight)
  success = nfc.readPassiveTargetID(PN532_MIFARE_ISO14443A, uid, &uidLength);

  uint32_t cardidentifier = 0;

  if (success) {
    // Found a card!

    Serial.print("Card detected #");
    // turn the four byte UID of a mifare classic into a single variable #
    cardidentifier = uid[3];
    cardidentifier <<= 8; cardidentifier |= uid[2];
    cardidentifier <<= 8; cardidentifier |= uid[1];
    cardidentifier <<= 8; cardidentifier |= uid[0];
    Serial.println(cardidentifier);


    if (cardidentifier == 3209486170) {
      Keyboard.write('H');
      Keyboard.write('e');
      Keyboard.write('l');
      Keyboard.write('l');
      Keyboard.write('o');
      Keyboard.write(' ');
      Keyboard.write(' ');
      //Keyboard.write('d');
      //Keyboard.write('e');
      //Keyboard.write('r');
      //Keyboard.write('e');
      //Keyboard.write('\n');
      digitalWrite(12, HIGH);
      delay(5000);
      digitalWrite(12, LOW);
      delay(5000);
    }
    else if (cardidentifier == 304992106) {
      char pswdarray[100];
      char trmnlarray[100];
      char pctrarray[100];
      String pswd = "PaSsWoRd";
      String trmnl = "date +%a,%b,%d,%H:%M:%S,%Y >> /Users/nathana******/Documents/CompLog.csv";
      for (int i = 0; i < pswd.length(); i++)
      {
        pswdarray[i] = pswd[i];
        Keyboard.write(pswd[i]);
      }
      Keyboard.write('\n');
      digitalWrite(12, HIGH);   // turn the LED on (HIGH is the voltage level)
      delay(5000);                       // wait for a second
      for (int j = 0; j < trmnl.length(); j++)
      {
        trmnlarray[j] = trmnl[j];
        Keyboard.write(trmnl[j]);
      }
      Keyboard.write('\n');
      digitalWrite(12, LOW);
      delay(5000);

    }
    else if (cardidentifier == 305623274) {

      digitalWrite(12, HIGH);   // turn the LED on (HIGH is the voltage level)
      delay(5000);                       // wait for a second
      digitalWrite(12, LOW);
      delay(5000);
    }
    else if (cardidentifier == 2870144148) {
      char pswdarray[100];
      char trmnlarray[100];
      char pctrarray[100];
      char picturemovearray[100];
      char picmovearray[100];
      String pswd = "PaSsWoRd";
      String trmnl = "date +%a,%b,%d,%H:%M:%S,%Y >> /Users/nathana******/Documents/CompLog.csv";
      String charString = "" + (String)crntpctr;
      String pctr = "imagesnap -w 1 computerlogged" + (String)crntpctr;
      String picturemove = "mv -v /Users/nathana******/computerlogged" + (String)crntpctr;
      String picmove = ".jpg /Users/nathana******/Desktop/LoggedPictures";
      Serial.print(pctr);
      Serial.print(charString);
      for (int k = 0; k < pswd.length(); k++)
      {
        pswdarray[k] = pswd[k];
        Keyboard.write(pswd[k]);
      }
      Keyboard.write('\n');
      digitalWrite(12, HIGH);   // turn the LED on (HIGH is the voltage level)
      delay(5000);                       // wait for a second
      for (int l = 0; l < trmnl.length(); l++)
      {
        trmnlarray[l] = trmnl[l];
        Keyboard.write(trmnl[l]);
      }
      Keyboard.write('\n');
      for (int m = 0; m < pctr.length(); m++)
      {
        pctrarray[m] = pctr[m];
        Keyboard.write(pctr[m]);
      }
      Keyboard.write('.');
      Keyboard.write('j');
      Keyboard.write('p');
      Keyboard.write('g');
      Keyboard.write('\n');
      delay(1500);
      for (int n = 0; n < picturemove.length(); n++)
      {
        picturemovearray[n] = picturemove[n];
        Keyboard.write(picturemove[n]);
      }
      for (int o = 0; o < picmove.length(); o++)
      {
        picmovearray[o] = picmove[o];
        Keyboard.write(picmove[o]);
      }
      crntpctr++;
      Keyboard.write('\n');
      digitalWrite(12, LOW);
      delay(5000);
    }
    else {
      digitalWrite(13, HIGH);   // turn the LED on (HIGH is the voltage level)
      delay(5000);                       // wait for a second
      digitalWrite(13, LOW);
    }
  }
}


